version: '3.7'
services:
  helpdesk-backend:
    image: helpdesk-backend
    environment:
      EUREKA_CLIENT_ENABLED: "true"
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/helpdesk
      KEYCLOAK_AUTH_SERVER_URL: http://172.17.0.1:8082/auth/
      SPRING_KAFKA_CONSUMER_GROUPID: "helpdesk-backend-0005"
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-service:8761/eureka/
      SPRING_KAFKA_BOOTSTRAPSERVERS: kafka:9092
      SPRING_KAFKA_PROPERTIES_SCHEMA_REGISTRY_URL: schema-registry:8081
    depends_on:
      - eureka-service
      - db
      - prometheus


  email-client-generic:
    image: email-client
    environment:
      LOCAL_PART: helpdesk.gdf
      DOMAIN: yandex.com
      SPRING_MAIL_PASSWORD: Tha0xi7k
      EUREKA_CLIENT_ENABLED: "true"
      SPRING_MAIL_IMAP_USERFLAG: "client40"
      SPRING_KAFKA_CONSUMER_GROUPID: "email-client-0012"
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-service:8761/eureka/
      SPRING_KAFKA_BOOTSTRAPSERVERS: kafka:9092
      SPRING_KAFKA_PROPERTIES_SCHEMA_REGISTRY_URL: schema-registry:8081
    depends_on:
      - eureka-service
      - zookeeper
      - kafka
      - schema-registry

  email-client-travel:
    image: email-client
    environment:
      LOCAL_PART: helpdesk.gdf.travel
      DOMAIN: yandex.com
      SPRING_MAIL_PASSWORD: Xo8nua4o
      EUREKA_CLIENT_ENABLED: "true"
      SPRING_MAIL_IMAP_USERFLAG: "client40"
      SPRING_KAFKA_CONSUMER_GROUPID: "email-client-0012"
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-service:8761/eureka/
      SPRING_KAFKA_BOOTSTRAPSERVERS: kafka:9092
      SPRING_KAFKA_PROPERTIES_SCHEMA_REGISTRY_URL: schema-registry:8081
    depends_on:
      - eureka-service
      - zookeeper
      - kafka
      - schema-registry

  email-client-theater:
    image: email-client
    environment:
      LOCAL_PART: h.gdf.theater
      DOMAIN: gmx.com
      SPRING_MAIL_USERNAME: h.gdf.theater@gmx.com
      SPRING_MAIL_PASSWORD: Thu9esejThu9esej
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_SOCKETFACTORY_PORT: 587
      SPRING_MAIL_PORT: 587
      EUREKA_CLIENT_ENABLED: "true"
      SPRING_MAIL_IMAP_USERFLAG: "client40"
      SPRING_KAFKA_CONSUMER_GROUPID: "email-client-0012"
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-service:8761/eureka/
      SPRING_KAFKA_BOOTSTRAPSERVERS: kafka:9092
      SPRING_KAFKA_PROPERTIES_SCHEMA_REGISTRY_URL: schema-registry:8081
    depends_on:
      - eureka-service
      - zookeeper
      - kafka
      - schema-registry

  eureka-service:
    image: springcloud/eureka

  db:
    image: postgres
    ports:
      - 5432:5432
    volumes:
      - ./postgres:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_PASSWORD: postgres

  keycloak:
    image: quay.io/keycloak/keycloak:11.0.2
    volumes:
      - ./keycloak:/opt/jboss/keycloak/imports
      - ./keycloak/standalone-ha.xml:/opt/jboss/keycloak/standalone/configuration/standalone-ha.xml
    ports:
      - 8082:8080
    environment:
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
      KEYCLOAK_IMPORT: /opt/jboss/keycloak/imports/realm-export.json

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus/:/etc/prometheus/
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    depends_on:
      - eureka-service

  grafana:
    image: grafana/grafana
    volumes:
      - ./grafana:/var/lib/grafana
    ports:
      - 3000:3000
    depends_on:
      - prometheus

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    ports:
      - 9092:9092
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 172.17.0.1
      KAFKA_CREATE_TOPICS: "email.in.v1.pub:2:3,helpdesk.gdf_yandex.com.v1.pub:2:3,helpdesk.gdf.travel_yandex.com.v1.pub:2:3,h.gdf.theater_gmx.com.v1.pub:2:3"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  schema-registry:
    image: confluentinc/cp-schema-registry
    ports:
      - 8081:8081
    depends_on:
      - zookeeper
      - kafka
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zookeeper:2181
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: kafka:9092

  kafka-rest:
    image: confluentinc/cp-kafka-rest
    environment:
      KAFKA_REST_SCHEMA_REGISTRY_URL: schema-registry
      KAFKA_REST_BOOTSTRAP_SERVERS: kafka:9092
      KAFKA_REST_HOST_NAME: kafka-rest
    depends_on:
      - schema-registry
      - zookeeper
      - kafka

  kafka-ui:
    image: landoop/kafka-topics-ui
    ports:
      - 9093:8000
    environment:
      KAFKA_REST_PROXY_URL: http://kafka-rest:8082
      PROXY: "true"
    depends_on:
      - kafka-rest

  nginx:
    image: nginx
    ports:
      - 80:80
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/dist/frontend:/usr/share/nginx/html